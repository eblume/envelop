---

- name: Install neovim dependencies (Debian)
  when: ansible_os_family == "Debian"
  apt: name="{{ packages }}" state=latest
  become: yes
  vars:
    packages:
    - ninja-build
    - gettext
    - libtool
    - libtool-bin
    - autoconf
    - automake
    - cmake
    - g++
    - pkg-config
    - unzip

- name: Install neovim dependencies (OS X)
  when: ansible_os_family == "Darwin"
  homebrew: name="{{ packages }}" state=latest
  vars:
    packages:
      - ninja
      - gettext
      - libtool
      - autoconf
      - automake
      - cmake
      - pkg-config
      - unzip

- name: Clone or Update neovim repository
  git:
    repo: 'git@github.com:neovim/neovim.git'
    dest: "{{ nonwork_code_dir }}/neovim"
    version: "{{ neovim_version }}"
    refspec: "+refs/heads/master"
  register: neovim_git_result

- stat:
    path: "{{ user_bin_dir }}/nvim"
  register: neovim_bin

- name: (Re)build neovim
  include: build_neovim.yml
  when: (neovim_git_result.after != neovim_git_result.before) or
        (not neovim_bin.stat.exists)

# We also do this as a step in build_neovim.yml, but there are times where we
# don't want to build neovim and yet still want this step.
- name: Save neovim config
  template:
    src: init.vim.j2
    dest: "{{ ansible_env.HOME }}/.config/nvim/init.vim"
    mode: "u=rw,g=,o="

- name: Install/Update neovim plugins
  command: "{{ user_bin_dir}}/nvim -c PlugUpdate -c quitall"
