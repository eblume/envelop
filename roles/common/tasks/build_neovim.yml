---
- name: Just friggin install neovim already dammit ( OS X )
  when: ansible_os_family == "Darwin"
  block:
    - name: Just friggin install it please, homebrew
      homebrew:
        name: neovim
        state: latest

    - name: Link neovim to my personal bin
      file:
        src: /usr/local/Cellar/neovim/0.4.3/bin/nvim
        dest: /Users/erich/bin/nvim
        state: link

- name: Build neovim ( Debian )
  when: ansible_os_family == "Debian"
  block:
    - name: Remove neovim build folder
      file: path="{{ nonwork_code_dir}}/neovim/build" state=absent

    - name: Clean neovim build artifacts
      command: make clean
      args:
        chdir: "{{ nonwork_code_dir }}/neovim"

    - name: Build neovim (this may take a bit)
      command: "make -j 4 CMAKE_EXTRA_FLAGS='-DCMAKE_INSTALL_PREFIX={{ user_bin_dir }}/../' CMAKE_BUILD_TYPE=RelWithDebInfo"
      args:
        chdir: "{{ nonwork_code_dir }}/neovim"
        creates: "{{ nonwork_code_dir }}/neovim/build"

    - name: Install neovim
      command: make install
      args:
        chdir: "{{ nonwork_code_dir }}/neovim"

- name: Create neovim config directory
  file: path="{{ ansible_env.HOME }}/.config/nvim" state=directory

- name: Save neovim config
  template:
    src: init.vim.j2
    dest: "{{ ansible_env.HOME }}/.config/nvim/init.vim"
    mode: "u=rw,g=,o="

- name: Create bundle directory
  file: path="{{ ansible_env.HOME }}/.vim/bundle" state=directory

- name: Create undodir directory
  file: path="{{ ansible_env.HOME }}/.vim/undodir" state=directory

- name: Create undodir directory
  file: path="{{ ansible_env.HOME }}/.vim/sessions" state=directory
