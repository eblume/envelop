---

- name: Install tmux dependencies (Debian)
  when: ansible_os_family == "Debian"
  become: yes
  apt:
    state: latest
    pkg:
      - libevent-dev
      - ncurses-dev
      - libncurses-dev  # unclear if both are needed
      - build-essential
      - automake
      - autoconf
      - pkg-config
      - bison  # needed for yacc, new dep??

- name: Install tmux dependencies (OS X)
  when: ansible_os_family == "Darwin"
  homebrew:
    state: latest
    name:
      - ruby
      - libevent
      - ncurses
      - automake
      - autoconf
      - pkg-config

- name: Clone or Update tmux repository
  git:
    repo: 'git@github.com:tmux/tmux.git'
    dest: "{{ nonwork_code_dir }}/tmux"
    version: "{{ tmux_version }}"
    force: yes
  register: tmux_git_result

- stat:
    path: "{{ user_bin_dir }}/tmux"
  register: tmux_bin

- name: (Re)build tmux
  include: build_tmux.yml
  when: tmux_git_result.changed or not tmux_bin.stat.exists

- name: Save tmux config
  template: src=tmux.conf.j2 dest="{{ ansible_env.HOME }}/.tmux.conf"
  register: tmux_config_result

- name: Tell tmux to source the config again
  when: tmux_config_result.changed  # this could also be a handler. hmm.
  command: "{{ user_bin_dir}}/tmux source {{ ansible_env.HOME}}/.tmux.conf"
  ignore_errors: yes

- name: Clone or Update the tmuxinator repository
  git:
    repo: 'git@github.com:tmuxinator/tmuxinator.git'
    dest: "{{ nonwork_code_dir }}/tmuxinator"
    version: "v{{ tmuxinator_version }}"
  register: tmuxinator_git_result

- name: Build tmuxinator from gemspec
  # when: tmuxinator_git_result.changed
  block:
    - name: Build gemfile from gemspec
      shell:
        chdir: "{{ nonwork_code_dir }}/tmuxinator"
        cmd: "rbenv exec gem build tmuxinator.gemspec"
    - name: Install tmuxinator gem
      shell:
        chdir: "{{ nonwork_code_dir }}/tmuxinator"
        cmd: "rbenv exec gem install tmuxinator-{{ tmuxinator_version}}.gem"

- name: Create tmuxinator config dir
  file: path="{{ ansible_env.HOME }}/.config/tmuxinator" state=directory

- name: Install tmuxinator configs
  template: src="{{ item }}.yml.j2" dest="{{ ansible_env.HOME }}/.config/tmuxinator/{{ item }}.yml"
  with_items:
    - usual
