---

- name: Install pyenv and pyenv-virtualenv (OS X)
  when: ansible_os_family == "Darwin"
  vars:
    packages:
      - pyenv
      - pyenv-virtualenv
  homebrew:
    path: /opt/homebrew/bin
    name: "{{ packages }}"
    state: latest

- name: "Gather info on installed versions of python"
  command: pyenv versions
  changed_when: false
  register: pyenv_versions_check

- name: Install python versions in to pyenv
  when: not pyenv_versions_check.stdout or item not in pyenv_versions_check.stdout
  command: "pyenv install {{ item }}"
  environment:
    PYTHON_CONFIGURE_OPTS: "--enable-shared"
  with_items:
    - "3.9.4"

- name: Check which version of pyenv is global
  command: pyenv global
  register: pyenv_global_check
  changed_when: false

- name: Install the global python version
  when:
    - pyenv_global_check.stdout != pyenv_global_version
  command: "pyenv install {{ pyenv_global_version }}"
  register: pyenv_global_install
  ignore_errors: yes  # We'll catch errors in the next step

- name: pyenv global version install failure reason check (in case its just already installed)
  fail:
    msg: "pyenv failed: {{ pyenv_global_install.stderr }}"
  when:
    - "pyenv_global_check.stdout == 'system'"
    - "'already exists' not in pyenv_global_install.stderr"

- name: Set the global python version
  when:
    - pyenv_global_check.stdout != pyenv_global_version
  command: "pyenv global {{ pyenv_global_version }}"

# Let's also install poetry here - it isn't pyenv, but it'll be useful a lot.

- name: Download the poetry installer
  get_url:
    url: https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
    dest: "{{ nonwork_code_dir }}/get-poetry.py"
    mode: 0660

- name: Install/Update poetry
  command: "python {{ nonwork_code_dir }}/get-poetry.py -y"
  register: poetry_update
  changed_when: "'Latest version already installed' not in poetry_update.stdout"
