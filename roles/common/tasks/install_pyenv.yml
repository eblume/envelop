---

- name: Check out the pyenv code
  git:
    repo: git@github.com:pyenv/pyenv.git
    dest: "{{ nonwork_code_dir }}/pyenv"
    version: "{{ pyenv_version }}"
  register: pyenv_git

- name: Check out the pyenv-virtualenv plugin
  git:
    repo: git@github.com:pyenv/pyenv-virtualenv.git
    dest: "{{ nonwork_code_dir }}/pyenv/plugins/pyenv-virtualenv"
    version: "{{ pyenv_virtualenv_version }}"
  register: pyenv_virtualenv_git

- name: "Gather info on installed versions of python"
  command: "{{ nonwork_code_dir }}/pyenv/bin/pyenv versions"
  changed_when: false
  register: pyenv_versions_check

- name: "Install required packages"
  become: yes
  vars:
    packages:
      - libreadline-dev
      - libncurses5-dev
      - libncursesw5-dev
      - openssl
      - libssl-dev
      - libbz2-dev
      - sqlite3  # not needed, but... it's awesome
      - libsqlite3-dev
      - libgdbm-dev
      - libc6-dev
      - zlib1g-dev
      - tk-dev
      - libffi-dev
  apt:
    name: "{{ packages }}"
    state: latest

- name: Install python versions in to pyenv
  when: not pyenv_versions_check.stdout or item not in pyenv_versions_check.stdout
  command: "fish -c \"source ({{ nonwork_code_dir }}/pyenv/bin/pyenv init -|psub); and  {{ nonwork_code_dir }}/pyenv/bin/pyenv install {{ item }}\""
  with_items:
    - "2.7.15"
    - "3.7.0"
    - "3.6.5"
    - "3.6.6"
    - "pypy3.5-6.0.0"

- name: Check which version of pyenv is global
  command: "{{ nonwork_code_dir }}/pyenv/bin/pyenv global"
  register: pyenv_global_check
  changed_when: false

- name: Install the global python version
  when: 
    - pyenv_global_check.stdout == 'system'
  command: "fish -c \"source ({{ nonwork_code_dir }}/pyenv/bin/pyenv init -|psub); and  {{ nonwork_code_dir }}/pyenv/bin/pyenv install {{ pyenv_global_version }}\""
  register: pyenv_global_install
  ignore_errors: yes

- name: pyenv global version install failure reason check (in case its just already installed)
  fail:
    msg: "pyenv failed: {{ pyenv_global_install.stderr }}"
  when:
    - "pyenv_global_check.stdout == 'system'"
    - "'already exists' not in pyenv_global_install.stderr"

- name: Set the global python version
  when: 
    - pyenv_global_check.stdout == 'system'
  command: "fish -c \"source ({{ nonwork_code_dir }}/pyenv/bin/pyenv init -|psub); and {{ nonwork_code_dir }}/pyenv/bin/pyenv global {{ pyenv_global_version }}\""

# Let's also install poetry here - it isn't pyenv, but it'll be useful a lot.

- name: Install python poetry - version pinning and dep fetcher
  pip:
    name: poetry
    state: latest
    executable: pip3
    extra_args: "--user"
